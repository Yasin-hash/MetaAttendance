from django.core.management.base import BaseCommand
from django.contrib.auth.models import User
from attendance.models import Student, Faculty
from django.db import IntegrityError
import random
import string

class Command(BaseCommand):
    help = 'Удалить всех студентов и добавить новых студентов с рандомными паролями для разных факультетов'

    def generate_random_password(self, length=6):
        """Генерация случайного пароля из цифр."""
        characters = string.digits
        return ''.join(random.choices(characters, k=length))

    def generate_unique_username(self, base_username):
        """Генерация уникального имени пользователя."""
        username = base_username
        while User.objects.filter(username=username).exists():
            # Добавляем случайное число к имени пользователя, если оно уже занято
            username = f'{base_username}{random.randint(1, 999)}'
        return username

    def handle(self, *args, **kwargs):
        # Удаляем всех студентов и связанных пользователей
        students = Student.objects.all()
        for student in students:
            user = student.user
            user.delete()  # Удаляем пользователя
        students.delete()  # Удаляем всех студентов
        self.stdout.write(self.style.SUCCESS('Все студенты и связанные пользователи удалены.'))

        # Определяем списки студентов для каждого факультета
        faculty_students = {
'КБ-24-09': [
    'Абдрахимов Эркинбек Мирбекович.',
    'Абдусаторов Элдияр Ахлидинович.',
    'Акылбеков Арназ Уланбекович.',
    'Акылбеков Мундузбек Алмазович.',
    'Анарбеков Нурдан Нурадилович.',
    'Арстанбеков Ясин Нааматович.',
    'Аскарбеков Ыйманбек Маратович.',
    'Бекжанов Эльдияр Мырзаевич.',
    'Егенбердиев Илим Бакытбекович.',
    'Ембердиев Нурислам Ерболович.',
    'Кенешев Ислам Алдиярович.',
    'Маданбеков Айбек Маданбекович.',
    'Мирлан Уулу Калыс.',
    'Муратов Кубанычбек Муратович.',
    'Нурдинбеков Адилет Тайырбекович.',
    'Осмоналиев Тариэль Эльмарович.',
    'Өнөрбаев Мухсин Сайфиллаевич.',
    'Тхай Таисия Григорьевна.',
    'Юнусов Хамза Нуруллаевич.'
],
'БЛ-24-09': [
    'Аманбеков Ибрахим Нуржанович.',
    'Арзыбеков Элзар Азаматович.',
    
    'Бекболотов Жанат Кыялбекович.',
    'Исмаилова Зарина Арсланбековна.',
    'Кадыралиев Акбар Нематиллаевич.',
    'Касымкулов Арген Суйумбекович.',
    'Кеңешбеков Бейбарс Айбекович.',
    'Кожошов Адилет Турарбекович.',
    'Кошалиев Ильгиз Жакыпбекович.',
    'Манасбеков Тариел Манасбекович.',
    'Насирдинов Дауд Азаматович.',
    'Орумбеков Нурбол Орумбекович.',
    'Рахатбеков Иман Рахатбекович.',
    'Русланов Илим Русланович.',
    'Турдубекова Айдана Каныбековна.',
    'Шадыбаев Амиджан Алишерович.',
    'Эфендиев Адам Гаджиевич.',
],
'РИ-24-09': [
    'Ашыров Бектур Ашырович.',
    'Балакин Кирилл Сергеевич.',
    'Бушман Ольга Юрьевна.',
    'Джоошбаев Адис Рустанбекович.',
    'Дуйшенова Айсулуу Нурланбековна.',
    'Жунусов Жанторо Алтынбекович.',
    'Зулпуев Адилет Алмазович.',
    'Ибралиев Байыш Нурканович.',
    'Исакова Алиса Бакытовна.',
    'Касыев Агзам Эрнестович.',
    'Кудашов Урмат Бактыбекович.',
    'Матраимова Даана Маратовна.',
    'Мырзамомунов Бекболсун Кубанычбекович.',
    'Назырбекова Назик Керимжановна.',
    'Омурбеков Нурислам Баатырбекович.',
    'Рыскулбеков Нуржигит Эрнисбекович.',
    'Сайфудинов Даниэль Адилетович.',
    'Эргашев Иброхим Шовкат Угли.'
],
'ИЯ-24-09': [
    'Абдулла Бектур Таалайбекулы.',
    'Абдырахимова Камиля Абдырахимовна.',
    'Айткулова Кенжегул Жайлообековна.',
    'Айылчиева Улара Жеңишбековна.',
    'Акматбекова Ширин Нурланбековна.',
    'Асаналиев Нурмухаммед Каныбекович.',
    'Асанбекова Касиет Нурлановна.',
    'Ашимбекова Айпери Нурдиновна.',
    'Баратбаев Мухаммадзокир.',
    'Борошова Асема Талантбековна.',
    'Ванинова Альфия Салировна.',
    'Жумакадыров Алинур Амангельдиевич.',
    'Койчубеков Нурадиль Эмильевич.',
    'Мамаева Надия Руслановна.',
    'Мукашова Бегимай Дыйканбековна.',
    'Мусабаева Сезим Сыймыковна.',
    'Мусаева Зухра Равшановна.',
    'Намаева Айтурган Шералиевна.',
    'Орозбекова Аяна Акылбековна.',
    'Русланбеков Нурдөөлөт Русланбекович.',
    'Сеитмуратов Али Султанбекович.',
    'Султаналиева Нурдана Данияровна.',
    'Сыдыгалиева Фатима Садырбековна.',
    'Мамытова Айгерим Ринатовна.',
    'Осконбеков Арлес Талантбекович.'
],
'ПвКС-24-09': [
    'Абыкеев Алан Эрмекович.',
    'Авазбеков Аскар Союзбекович.',
    'Акбагышев Нурсултан Бакытбекович.',
    'Алымкулов Даниэл Кадыркулович.',
    'Арлекова Акмаржан Бакытовна.',
    'Асанов Марсель Орозбаевич.',
    'Асеинов Таалим Бактиярович.',
    'Жаныбеков Ясин Анарбекович.',
    'Жедигеров Даниэль Аскарович.',
    'Жигиталиев Өмүрбек Имамалиевич.',
    'Зарлыков Тимур Сагындыкович.',
    'Зарылбеков Кутман Маратбекович.',
    'Имаров Ислам Акбаралиевич.',
    'Имашов Даниель Кочконович.',
    'Камардинов Имранали Халмурадович.',
    'Карахметов Расул Исаевич.',
    'Керимбеков Арслан Марсович.',
    'Кундузов Ринат Замирбекович.',
    'Муканова Айсулуу Бакытбековна.',
    'Орозов Мураддил Жумабаевич.',
    'Өзгөрүшова Аделя Абдымаметовна.',
    'Рахманов Бекмамат Сапаралыевич.',
    'Рашимбеков Нурислан Канатбекович.',
    'Рысбеков Арген Рысбекович.',
    'Сабырбеков Байэл Мээрбекович.',
    'Сагынбаев Султан Алмазович.',
    'Сейдибалиев Дастан Талантбекович.',
    'Темирбеков Бекжан Смаилович.',
    'Уланычбеков Илгиз Махмудович.',
    'Усенкулов Аманат Нурматович.',
    'Шаршембиев Кутман Чынгызович.',
    'Шаршеналиева Айели Каирбековна.',
    'Эркинбаев Билал Даниярович.'
]}
        # Цикл по факультетам и студентам
        for faculty_name, students_list in faculty_students.items():
            try:
                faculty = Faculty.objects.get(name=faculty_name)
            except Faculty.DoesNotExist:
                self.stdout.write(self.style.ERROR(f'Факультет {faculty_name} не найден'))
                continue

            for full_name in students_list:
                # Генерация случайного пароля
                password = self.generate_random_password()

                # Разделяем полное имя на части: имя, фамилия и отчество
                name_parts = full_name.split()
                first_name = name_parts[1] if len(name_parts) > 1 else ''
                last_name = name_parts[0] if len(name_parts) > 0 else ''
                middle_name = name_parts[2] if len(name_parts) > 2 else ''

                # Базовое имя пользователя
                base_username = f'{last_name}{first_name}'

                # Ограничение длины имени пользователя (макс. 150 символов)
                base_username = base_username[:150]

                # Генерация уникального username
                username = base_username
                    # Создаем пользователя
                    user = User.objects.create_user(
                        username=username,
                        password=password,
                        first_name=first_name,
                        last_name=last_name
                    )
                    user.save()

                    # Создаем студента
                    student = Student(
                        user=user,
                        faculty=faculty,
                        latitude=None,
                        longitude=None,
                        status="active"
                    )
                    student.save()

                    self.stdout.write(self.style.SUCCESS(f'Успешно добавлен студент: {full_name} с username: {username} и паролем: {password}'))

                except IntegrityError as e:
                    self.stdout.write(self.style.ERROR(f'Ошибка при создании пользователя для {full_name}: {str(e)}'))
                except Exception as e:
                    self.stdout.write(self.style.ERROR(f'Неизвестная ошибка при создании пользователя для {full_name}: {str(e)}'))

        self.stdout.write(self.style.SUCCESS('Процесс завершен!'))